version: '3'
services:
  # Postgres SQL Database.
  #-------------------------------------------------
  postgres-db:
    container_name: devnet-db
    image: postgres:15.1-alpine
    restart: on-failure
    networks:
      - devnet-app-network
    env_file:
      - .env/Postgres_Credentials.env
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # Kotlin-Spring Backend Server.
  #-------------------------------------------------
  backend:
    container_name: devnet-backend
    image: devnet-backend
    stdin_open: true
    restart: on-failure
    build:
      context: backend/
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    networks:
      - devnet-app-network
    depends_on:
      - postgres-db
    environment:
      - POSTGRES_HOST=postgres-db
      - POSTGRES_PORT=5432
    env_file:
      - .env/Postgres_Credentials.env

  # NEXT.js Frontend Client.
  #-------------------------------------------------
  frontend:
    container_name: devnet-frontend
    image: devnet-frontend
    stdin_open: true
    restart: on-failure
    build:
      context: frontend/
      dockerfile: Dockerfile
    depends_on:
      - backend
    ports:
      - 8081:80
    networks:
      - devnet-app-network
  # host:container
  # NGINX Load Balancer.
  #-------------------------------------------------
  load_balancer:
    image: nginx:1.23.3-alpine
    container_name: devnet-nginx
    stdin_open: true
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    networks:
      - devnet-app-network

# Networking.
#-------------------------------------------------
networks:
  devnet-app-network:
    name: devnet-app-net
    driver: bridge
    ipam:
      driver: default

volumes:
  postgres-data:
    driver: local
